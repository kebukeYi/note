#  02 \u5206\u5E93 \u5206\u8868

#\u914D\u7F6E\u591A\u4E2A\u6570\u636E\u6E90
spring.shardingsphere.datasource.names=m1,m2

spring.shardingsphere.datasource.m1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m1.url=jdbc:mysql://localhost:3306/coursedb?characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.m1.username=root
spring.shardingsphere.datasource.m1.password=123456

spring.shardingsphere.datasource.m2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m2.url=jdbc:mysql://localhost:3306/coursedb2?characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.m2.username=root
spring.shardingsphere.datasource.m2.password=123456

#\u771F\u5B9E\u8868\u5206\u5E03\uFF0C\u5206\u5E93\uFF0C\u5206\u8868
spring.shardingsphere.sharding.tables.course.actual-data-nodes=m$->{1..2}.course_$->{1..2}

spring.shardingsphere.sharding.tables.course.key-generator.column=cid
spring.shardingsphere.sharding.tables.course.key-generator.type=SNOWFLAKE
spring.shardingsphere.sharding.tables.course.key-generator.props.worker.id=1

# 01 inline \u5206\u7247\u7B56\u7565
# \u5206\u8868\u7B56\u7565 \u53EA\u80FD\u5206\u5230\u6BCF\u4E2A\u5E93\u7684\u6BCF\u4E2A\u5355\u8868
#spring.shardingsphere.sharding.tables.course.table-strategy.inline.sharding-column=cid
#spring.shardingsphere.sharding.tables.course.table-strategy.inline.algorithm-expression=course_$->{cid%2+1}
# \u5206\u5E93\u7B56\u7565
#spring.shardingsphere.sharding.tables.course.database-strategy.inline.sharding-column=cid
#spring.shardingsphere.sharding.tables.course.database-strategy.inline.algorithm-expression=m$->{cid%2+1}

# 02 standard\u6807\u51C6\u5206\u7247\u7B56\u7565  \u53EA\u652F\u6301\u5355\u4E2A \u5206\u7247\u952E
# \u5206\u8868\u7B56\u7565
#spring.shardingsphere.sharding.tables.course.table-strategy.standard.sharding-column=cid
#\u7CBE\u51C6\u67E5\u8BE2\u7B56\u7565
#spring.shardingsphere.sharding.tables.course.table-strategy.standard.precise-algorithm-class-name=com.roy.shardingDemo.algorithem.MyPreciseTableShardingAlgorithm
#\u8303\u56F4\u67E5\u8BE2\u7B56\u7565
#spring.shardingsphere.sharding.tables.course.table-strategy.standard.range-algorithm-class-name=com.roy.shardingDemo.algorithem.MyRangeTableShardingAlgorithm
# \u5206\u5E93\u7B56\u7565
#spring.shardingsphere.sharding.tables.course.database-strategy.standard.sharding-column=cid
#\u7CBE\u51C6\u67E5\u8BE2\u7B56\u7565
#spring.shardingsphere.sharding.tables.course.database-strategy.standard.precise-algorithm-class-name=com.roy.shardingDemo.algorithem.MyPreciseDSShardingAlgorithm
#\u8303\u56F4\u67E5\u8BE2\u7B56\u7565
#spring.shardingsphere.sharding.tables.course.database-strategy.standard.range-algorithm-class-name=com.roy.shardingDemo.algorithem.MyRangeDSShardingAlgorithm

# 03 complex \u590D\u6742\u5206\u7247\u7B56\u7565 \u652F\u6301\u591A\u4E2A\u5206\u7247\u952E
# \u5206\u8868\u7B56\u7565 \u591A\u5B57\u6BB5\u5206\u8868   :  cid, user_id \u5148\u662F\u6839\u636E cid  \u7136\u540E\u518D\u6839\u636E user_id
#spring.shardingsphere.sharding.tables.course.table-strategy.complex.sharding-columns= cid, user_id
#spring.shardingsphere.sharding.tables.course.table-strategy.complex.algorithm-class-name=com.roy.shardingDemo.algorithem.MyComplexTableShardingAlgorithm
# \u5206\u5E93\u7B56\u7565 \u591A\u5B57\u6BB5\u5206\u5E93
#spring.shardingsphere.sharding.tables.course.database-strategy.complex.sharding-columns=cid, user_id
#spring.shardingsphere.sharding.tables.course.database-strategy.complex.algorithm-class-name=com.roy.shardingDemo.algorithem.MyComplexDSShardingAlgorithm

# 04 hint\u5F3A\u5236\u8DEF\u7531\u7B56\u7565
# \u6CA1\u6709\u9ED8\u8BA4\u5206\u7247\u952E  \u81EA\u5DF1\u624B\u52A8\u8BBE\u7F6E\u5206\u7247\u952E
spring.shardingsphere.sharding.tables.course.table-strategy.hint.algorithm-class-name=com.roy.shardingDemo.algorithem.MyHintTableShardingAlgorithm

# 05 \u5E7F\u64AD\u8868\u914D\u7F6E
# \u4E5F\u53EB\u516C\u5171\u8868\uFF0C\u6307\u6240\u6709\u7684\u5206\u7247\u6570\u636E\u6E90\u4E2D\u90FD\u5B58\u5728\u7684\u8868\uFF0C\u8868\u7ED3\u6784\u548C\u8868\u4E2D\u7684\u6570\u636E
#\u5728\u6BCF\u4E2A\u6570\u636E\u5E93\u4E2D\u90FD\u5B8C\u5168\u4E00\u81F4\u3002\u4F8B\u5982\u5B57\u5178\u8868\u3002
spring.shardingsphere.sharding.broadcast-tables=t_dict
spring.shardingsphere.sharding.tables.t_dict.key-generator.column=dict_id
spring.shardingsphere.sharding.tables.t_dict.key-generator.type=SNOWFLAKE

spring.shardingsphere.props.sql.show = true
spring.main.allow-bean-definition-overriding=true

